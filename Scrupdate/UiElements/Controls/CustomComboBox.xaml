<!--
    Copyright © 2021 Matan Brightbert
    
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    
        http://www.apache.org/licenses/LICENSE-2.0
    
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->




<ComboBox x:Class="Scrupdate.UiElements.Controls.CustomComboBox"
          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
          xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
          mc:Ignorable="d"
          d:DesignHeight="450" d:DesignWidth="800" Width="auto" Height="auto" BorderThickness="0 0 0 0" BorderBrush="{StaticResource transparentSolidColorBrush}" Background="{StaticResource transparentSolidColorBrush}" HorizontalContentAlignment="Left" VerticalContentAlignment="Center">
    <ComboBox.Template>
        <ControlTemplate TargetType="ComboBox">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <ToggleButton Grid.Row="0" Grid.Column="0"
                              BorderThickness="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BorderThickness}"
                              IsChecked="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsDropDownOpen, Mode=TwoWay}">
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton">
                            <Setter Property="BorderBrush" Value="{StaticResource darkSilverishGraySolidColorBrush}" />
                            <Setter Property="Background" Value="{StaticResource smokeWhiteSolidColorBrush}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsEnabled}" Value="True">
                                    <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BorderBrush}" />
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsEnabled}" Value="True" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsMouseOver}" Value="False" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsDropDownOpen}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" Value="{StaticResource darkSilverishGraySolidColorBrush}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsEnabled}" Value="True" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsMouseOver}" Value="True" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsDropDownOpen}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" Value="{StaticResource silverishGraySolidColorBrush}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsEnabled}" Value="True" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsDropDownOpen}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" Value="{StaticResource lightSilverishGraySolidColorBrush}" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                    <ToggleButton.Template>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Border Grid.Row="0" Grid.Column="0" CornerRadius="3 3 3 3"
                                        BorderThickness="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BorderThickness}"
                                        BorderBrush="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BorderBrush}"
                                        Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Background}" />
                                <ContentPresenter Grid.Row="0" Grid.Column="0" />
                            </Grid>
                        </ControlTemplate>
                    </ToggleButton.Template>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Grid.Column="0" Foreground="{StaticResource graySolidColorBrush}" Margin="5 0 5 0"
                                   Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Background}"
                                   Padding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Padding}"
                                   HorizontalAlignment="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=HorizontalContentAlignment}"
                                   VerticalAlignment="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=VerticalContentAlignment}"
                                   Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=HintText}">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsEnabled}" Value="True" />
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=SelectedItem}" Value="" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Visibility" Value="Visible" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock Grid.Row="0" Grid.Column="0" Margin="5 0 5 0"
                                   Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Background}"
                                   Padding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Padding}"
                                   HorizontalAlignment="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=HorizontalContentAlignment}"
                                   VerticalAlignment="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=VerticalContentAlignment}"
                                   Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Text}">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Foreground" Value="{StaticResource lightGraySolidColorBrush2}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsEnabled}" Value="True">
                                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Foreground}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <Viewbox Grid.Row="0" Grid.Column="1" Width="10" Height="9" Margin="5 0 5 0" VerticalAlignment="Center">
                            <Path Stretch="Fill" Data="M 1238,140 1041,480 844,140 Z">
                                <Path.Style>
                                    <Style TargetType="Path">
                                        <Setter Property="LayoutTransform">
                                            <Setter.Value>
                                                <RotateTransform Angle="0" />
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Fill" Value="#FFCCCCCC" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsEnabled}" Value="True" />
                                                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsMouseOver}" Value="False" />
                                                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsDropDownOpen}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Fill" Value="#FF333333" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsEnabled}" Value="True" />
                                                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsMouseOver}" Value="True" />
                                                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsDropDownOpen}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Fill" Value="#FF5D5D5D" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsEnabled}" Value="True" />
                                                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsDropDownOpen}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="LayoutTransform">
                                                    <Setter.Value>
                                                        <RotateTransform Angle="180" />
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Fill" Value="#FF888888" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Path.Style>
                            </Path>
                        </Viewbox>
                    </Grid>
                </ToggleButton>
                <Popup x:Name="PART_Popup" Grid.Row="0" Grid.Column="0" Placement="Bottom" AllowsTransparency="True" PopupAnimation="Slide"
                       Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ActualWidth}"
                       IsOpen="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsDropDownOpen}">
                    <Border CornerRadius="3 3 3 3"
                            Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=PopupBackground}"
                            BorderThickness="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BorderThickness}"
                            BorderBrush="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BorderBrush}">
                        <ItemsPresenter />
                    </Border>
                </Popup>
            </Grid>
        </ControlTemplate>
    </ComboBox.Template>
</ComboBox>
